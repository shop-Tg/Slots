import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Bot Configuration
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = os.getenv("ADMIN_ID")

# Supabase Configuration
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")

# Web App Configuration
WEBAPP_URL = "http://localhost:8000"

# Game Settings
SPIN_COST = 25  # Cost in stars to spin the roulette
GIFTS = [
    {"name": "‚≠êÔ∏è 15 Stars", "value": 15, "weight": 100},  # 100% chance
    {"name": "‚≠êÔ∏è 25 Stars", "value": 25, "weight": 0},
    {"name": "‚≠êÔ∏è 35 Stars", "value": 35, "weight": 0},
    {"name": "‚≠êÔ∏è 50 Stars", "value": 50, "weight": 0},
    {"name": "‚≠êÔ∏è 100 Stars", "value": 100, "weight": 0},
    {"name": "‚≠êÔ∏è 250 Stars", "value": 250, "weight": 0}
]

# Database Tables SQL
DATABASE_TABLES = """
-- Users table with extended statistics
create table if not exists users (
    user_id bigint primary key,
    username text,
    stars integer default 0,
    total_games integer default 0,
    total_won integer default 0,
    biggest_win integer default 0,
    total_spent integer default 0,
    last_spin timestamp with time zone,
    created_at timestamp with time zone default timezone('utc'::text, now())
);

-- Transactions table with more details
create table if not exists transactions (
    id bigint generated by default as identity primary key,
    user_id bigint references users(user_id),
    amount integer,
    type text,
    gift_value integer,
    timestamp timestamp with time zone default timezone('utc'::text, now())
);

-- Leaderboard view
create or replace view leaderboard as
select 
    user_id,
    username,
    stars,
    total_games,
    total_won,
    biggest_win,
    total_spent,
    (total_won - total_spent) as net_profit
from users
order by stars desc, total_won desc
limit 100;
"""

# Messages
WELCOME_MESSAGE = """
üé∞ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–æ–≤—É—é —Ä—É–ª–µ—Ç–∫—É!

–ò—Å–ø—ã—Ç–∞–π—Ç–µ —É–¥–∞—á—É –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–¥–∫–∏–π –ø–æ–¥–∞—Ä–æ–∫! 
–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –≤—Ä–∞—â–µ–Ω–∏—è: {} ‚≠êÔ∏è

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏:
‚Ä¢ {} (–í—Å–µ–≥–¥–∞)
‚Ä¢ {} (–†–µ–¥–∫–æ)
‚Ä¢ {} (–û—á–µ–Ω—å —Ä–µ–¥–∫–æ)
‚Ä¢ {} (–°—É–ø–µ—Ä —Ä–µ–¥–∫–æ)
‚Ä¢ {} (–ú–µ–≥–∞ —Ä–µ–¥–∫–æ)
‚Ä¢ {} (–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ)

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ò—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É!" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
""".format(SPIN_COST, GIFTS[0]["name"], GIFTS[1]["name"], GIFTS[2]["name"], 
           GIFTS[3]["name"], GIFTS[4]["name"], GIFTS[5]["name"])

SPIN_REQUEST_MESSAGE = "üí´ –î–ª—è –≤—Ä–∞—â–µ–Ω–∏—è —Ä—É–ª–µ—Ç–∫–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ {} ‚≠êÔ∏è"
INSUFFICIENT_FUNDS = "‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ {} ‚≠êÔ∏è"
SPINNING_MESSAGE = "üé∞ –ö—Ä—É—Ç–∏–º —Ä—É–ª–µ—Ç–∫—É..."
WIN_MESSAGE = "üéâ –í–∞–º –≤—ã–ø–∞–ª–æ: {}\n–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å –ø–æ–¥–∞—Ä–∫–æ–º?"
SOLD_MESSAGE = "üí∞ –í—ã –ø—Ä–æ–¥–∞–ª–∏ –ø–æ–¥–∞—Ä–æ–∫ –∏ –ø–æ–ª—É—á–∏–ª–∏ {} ‚≠êÔ∏è"
KEPT_MESSAGE = "‚ú® –í—ã –æ—Å—Ç–∞–≤–∏–ª–∏ —Å–µ–±–µ {} ‚≠êÔ∏è"

# Database settings
DATABASE_FILE = "bot_database.db" 